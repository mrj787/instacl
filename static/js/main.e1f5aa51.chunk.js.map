{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","user","postId","username","caption","imageurl","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","setCaption","image","setImage","progress","setProgress","max","event","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","err","console","log","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","post","setPosts","openSingin","setopenSignin","open","setOpen","setUsername","email","setEmail","password","setPassword","setUser","onAuthStateChanged","authUser","id","Modal","onClose","style","Input","signInWithEmailAndPassword","catch","createUserWithEmailAndPassword","updateProfile","error","signOut","key","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1f5aa51.chunk.js","sourcesContent":["\r\n\r\nimport firebase from \"firebase\"\r\nconst firebaseApp=firebase.initializeApp({\r\n    apiKey: \"AIzaSyC5zByXO0lm3n9eFJV4Kow1qZCiT8Hl240\",\r\n    authDomain: \"instaclone-60235.firebaseapp.com\",\r\n    databaseURL: \"https://instaclone-60235.firebaseio.com\",\r\n    projectId: \"instaclone-60235\",\r\n    storageBucket: \"instaclone-60235.appspot.com\",\r\n    messagingSenderId: \"812077269805\",\r\n    appId: \"1:812077269805:web:4c4fc20a7dbeaa783749a4\",\r\n    measurementId: \"G-Q2E2901YSE\"\r\n})\r\n\r\nconst db=firebaseApp.firestore()\r\nconst auth=firebase.auth()\r\nconst storage=firebase.storage()\r\nexport {db, auth, storage}\r\n","import React,{useState,useEffect} from 'react'\r\nimport \"./Post.css\"\r\nimport firebase from \"firebase\"\r\nimport {db} from \"./firebase\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nfunction Post({user,postId,username,caption,imageurl}) {\r\n    const[comments,setComments]=useState([])\r\n    const[comment,setComment]=useState(\"\")\r\n    useEffect(()=>{\r\n        let unsubscribe;\r\n        if(postId){\r\n            unsubscribe=db\r\n            .collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"comments\")\r\n            .orderBy(\"timestamp\",\"desc\")\r\n            .onSnapshot((snapshot)=>{\r\n                setComments(snapshot.docs.map((doc)=>doc.data()))\r\n            })\r\n        } \r\n        \r\n        return ()=>{\r\n            unsubscribe()\r\n        }\r\n    },[postId])\r\n\r\n    const postComment=(e)=>{\r\n        e.preventDefault()\r\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n            text:comment,\r\n            username:user.displayName,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setComment(\"\")\r\n\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n        <div className=\"post__header\">\r\n            <Avatar\r\n            className=\"post__avatar\"\r\n            alt={username}\r\n            src='h'\r\n            />\r\n            <h3>{username}</h3>\r\n        </div>\r\n            <img className=\"post__image\" src={imageurl} alt=\"\"/>\r\n            <h4 className=\"post__text\"><strong>{username} </strong>{caption}</h4>\r\n            <div className=\"post__comments\">\r\n                {comments.map((comment)=>(\r\n                    <p>\r\n                        <strong>{comment.username}</strong> {comment.text}\r\n                    </p>\r\n                ))}\r\n\r\n            </div>\r\n\r\n        {user && (<form className=\"post__commentBox\">\r\n                <input\r\n                    className=\"post__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Add a comment...\"\r\n                    value={comment}\r\n                    onChange={(e)=>setComment(e.target.value)}\r\n                />\r\n                <button \r\n                    className=\"post__button\"\r\n                    disabled={!comment}\r\n                    type=\"submit\"\r\n                    onClick={postComment}>\r\n                        Post\r\n                    </button>\r\n\r\n            </form>) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React,{useState} from 'react'\r\nimport {Button} from '@material-ui/core'\r\nimport {db,storage} from \"./firebase\"\r\nimport firebase from \"firebase\"\r\nimport \"./ImageUpload.css\"\r\nfunction ImageUpload({username}) {\r\n    const [caption,setCaption]=useState(\"\")\r\n    const [image,setImage]=useState(null)\r\n    const [progress,setProgress]=useState(0)\r\n\r\n    const handleChange=(event)=>{\r\n        if(event.target.files[0]) setImage(event.target.files[0])\r\n    }\r\n\r\n    const handleUpload=()=>{\r\n        const uploadTask=storage.ref(`images/${image.name}`).put(image);\r\n        uploadTask.on(\"state_changed\",(snapshot)=>{\r\n            const progress=Math.round(snapshot.bytesTransferred/snapshot.totalBytes*100)\r\n            setProgress(progress)\r\n        },\r\n        (err)=>{\r\n            console.log(err)\r\n            alert(err.message)\r\n        },\r\n        ()=>{\r\n            storage.ref(\"images\").child(image.name).getDownloadURL()\r\n            .then(url=>{\r\n              db.collection(\"posts\").add({\r\n                  timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n                  caption:caption,\r\n                  imageurl: url,\r\n                  username:username\r\n              })\r\n              setProgress(0)  \r\n              setCaption(\"\")\r\n              setImage(null)\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"imageupload\">\r\n            <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n            <input type=\"text\" placeholder=\"Enter a caption...\" onChange={event=>setCaption(event.target.value)} value={caption}/>\r\n            <input type=\"file\" onChange={handleChange}/>\r\n            <Button  onClick={handleUpload}>\r\n                Upload\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport Post from \"./Post\"\nimport {db,auth} from \"./firebase\"\nimport {makeStyles} from '@material-ui/core/styles'\nimport Modal from '@material-ui/core/Modal'\nimport {Button,Input} from '@material-ui/core'\nimport ImageUpload from \"./ImageUpload\"\nimport InstagramEmbed from 'react-instagram-embed'\n\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50 ;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes=useStyles()\n  const [modalStyle]=useState(getModalStyle)\n  const [post, setPosts] = useState([])\n  const [openSingin,setopenSignin]=useState(null)\n  const [open, setOpen]=useState(false)\n  const [username, setUsername]=useState(\"\")\n  const [email, setEmail]=useState(\"\")\n  const [password, setPassword]=useState(\"\")\n  const [user, setUser]=useState(null)\n\n  useEffect(()=>{\n    const unsubscribe =auth.onAuthStateChanged(authUser=>{\n      if (authUser){\n        setUser(authUser)\n        console.log(authUser)\n        ;\n\n      }else{\n        setUser(null)\n      }\n  })\n  return ()=>{\n    unsubscribe()\n  }\n  }\n  ,[user,username])\n\n    useEffect(()=>{db.collection(\"posts\").orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot=>{\n      setPosts(snapshot.docs.map(doc=>({id:doc.id,\n        post:doc.data()}))\n    )})},[])\n\n  const signUp=event=>{\n    event.preventDefault()\n    auth.createUserWithEmailAndPassword(email,password).then((authUser)=>{\n      return authUser.user.updateProfile({\n        displayName:username\n      })\n    })\n    .catch((error)=>alert(error.message))\n    setOpen(false)\n\n  }\nconst singIn=(event)=>{\n  event.preventDefault()\n  auth.signInWithEmailAndPassword(email,password).catch((err)=>alert(err.message))\n  setopenSignin(false)\n}\n  \n  return (\n    \n    <div className=\"App\">\n      <Modal\n        open={openSingin}\n        onClose={()=>setopenSignin(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n        <form className=\"app__signup\">\n          <center>\n          <img className=\"app__headerimage\" src=\"https://pngimage.net/wp-content/uploads/2018/06/font-instagram-png-2.png\" alt=\"\"/>\n          </center>\n          <Input \n            placeholder=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}  \n          />\n          <Input \n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e)=>setPassword(e.target.value)}  \n          />\n          <Button type=\"submit\" onClick={singIn}>Sign In</Button>\n        </form>\n        </div>\n      </Modal>\n      <Modal\n        open={open}\n        onClose={()=>{setOpen(false)}}\n      >\n        <div style={modalStyle} className={classes.paper}>\n        <form className=\"app__signup\">\n          <center>\n          <img className=\"app__headerimage\" src=\"https://pngimage.net/wp-content/uploads/2018/06/font-instagram-png-2.png\" alt=\"\"/>\n          </center>\n          <Input \n            placeholder=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={(e)=>setUsername(e.target.value)}  \n          />\n          <Input \n            placeholder=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}  \n          />\n          <Input \n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e)=>setPassword(e.target.value)}  \n          />\n          <Button type=\"submit\" onClick={signUp}>Sign Up</Button>\n        </form>\n        </div>\n      </Modal>\n      \n      <div className=\"app__header\">\n        <img className=\"app__headerimage\" src=\"https://pngimage.net/wp-content/uploads/2018/06/font-instagram-png-2.png\" alt=\"\"/>\n        {user?<Button onClick={()=>{auth.signOut()}}>Logout</Button>:\n      <div className=\"app__logincontainer\">\n      <Button onClick={()=>{setopenSignin(true)}}>Sign In</Button>\n      <Button onClick={()=>{setOpen(true)}}>Sign Up</Button>\n      </div>}\n      </div>\n      <div className='app__posts'>\n        <div className=\"app__postsLeft\">\n          {\n          post.map(({id,post})=>\n            <Post key={id} user={user} postId={id} username={post.username} caption={post.caption} imageurl={post.imageurl} />) \n          }\n        </div>\n          <div className=\"app__postsRight\">\n              <InstagramEmbed\n              url='https://www.instagram.com/p/B8OD44KAlx1/'\n              maxWidth={320}\n              hideCaption={false}\n              containerTagName='div'\n              protocol=''\n              injectScript\n              onLoading={() => {}}\n              onSuccess={() => {}}\n              onAfterRender={() => {}}\n              onFailure={() => {}}\n            />\n          </div>\n      </div>\n      \n     {user?.displayName?<ImageUpload username={user.displayName} />:(<h3>sorry you need to login to update</h3>)}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}